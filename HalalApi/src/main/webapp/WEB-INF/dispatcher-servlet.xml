<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:mongo="http://www.springframework.org/schema/data/mongo"
 xsi:schemaLocation=" 
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/data/mongo
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">
 
	<context:component-scan base-package="com.halal.sa" />
	
	<mvc:annotation-driven/>
	
	<!-- This configuration is for CORS setup, to allow cross domain requests-->
	<mvc:cors>
		<mvc:mapping path="/**" 
		allowed-origins="*"
		allowed-methods="POST,GET, PUT"
		max-age="123"/>
	<!-- 	allowed-headers="header1, header2, header3"
		exposed-headers="header1, header2" allow-credentials="false" -->
	</mvc:cors>
	
	<!-- Configure the Mongo Server -->
	<mongo:db-factory id="mongoDbFactory" uri="mongodb://halalapi:samsung123@ds021884.mlab.com:21884/halaldb"/>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	    <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
    
    <mongo:repositories base-package="com.halal.sa.data.dao"></mongo:repositories>
	
	<import resource="classpath:apiservices-catalog-context.xml"/>
	
	
	<!-- <bean id="productService" class="com.sam.api.service.ProductService" /> -->
	
	<!-- <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/halalspot"/>
        <property name="username" value="root"/>
        <property name="password" value="mysql"/>
    </bean>

    <bean id="jpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        <property name="database" value="MYSQL"/>
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>

    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <property name="jpaDialect" ref="jpaDialect"/>
        <property name="jpaProperties">
            <map>
                <entry key="hibernate.show_sql" value="true"/>
            </map>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.halal.sa.data.entities</value>
            </list>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaDialect" ref="jpaDialect"/>
    </bean> -->
	
 
</beans>